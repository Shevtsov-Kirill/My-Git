import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
def linear_func(x, a, b):
    return a * x + b
x_data = np.array([4, 6, 8, 10, 12])
y_data = np.array([273, 335.6, 399.6, 462.9, 462.2])
y_data = np.array([237.062, 335.356, 383.18, 462.65, 462.56])
popt, pcov = curve_fit(linear_func, x_data, y_data)
a, b = popt
a_err = np.sqrt(pcov[0, 0])  # ошибка параметра a
b_err = np.sqrt(pcov[1, 1])  # ошибка параметра b
print(f"a = {a:.3f}, b = {b:.3f}")
print(a_err, b_err)
x_fit = np.linspace(4, 12)
y_fit = linear_func(x_fit, a, b)
plt.plot(x_fit, y_fit, 'r-', label=f'Аппроксимация: y = {a:.3f}x + {b:.3f}')
plt.title("момент силы тяжести")
plt.errorbar(x_data, y_data, yerr=30, fmt="o", capsize=4, capthick=2, markersize=4, label='Экспериментальные точки')
plt.grid(visible=True, which='major', linewidth=1.2, alpha = 0.7)
plt.legend()
# plt.tight_layout()
plt.xlabel("Число шариков, n")
plt.ylabel("момент силы, дин*см")
plt.savefig('vertical.png')